Command buffers
    --> https://docs.vulkan.org/tutorial/latest/03_Drawing_a_triangle/03_Drawing/01_Command_buffers.html

    Commands in vulkan:
        - drawing operations
        - memory transfers
    they are not excecuted directly by doing function calls
    you have to record these operations in a command buffer
    the recording of these commands can be multithreaded, this is an advantage

command pool
    they manage the memory that is used to store the buffers
    command buffers are allocated from them

Recording commands
    Once we have a command buffer, we begin recording commands into it

    - begin recording
    - begin render pass
    - bind to pipeline

Rendering and presentation
    drawing function
        - wait for the previous frame to finish
        - acquire an image from the swapchain
        - record a command buffer which draws the scene onto that image
        - submit the recorded command buffer
        - present the swap chain image

    synchronization
        In vulkan, synchronization is explicit
        We need to declare explicitly:
            - acquire image from swapchain
            - excecute commands that draw onto the acquired image
            - present the image to the screen presetation, returning it to the swapchain

    semaphore
        it is used to add order between queue operations
        queue operations are the work we sumbit to a queue either from:
            - command buffers
            - or from functions
        this applies to graphic queues, and presentation queues

        Types of semaphores:
            - binary (we will use these)
            - timeline

        Mode of operation
            Say we have a semaphore 'S', and operations 'A', and 'B'
            A semaphore's state is either unsignaled or signaled

            We tell operation A to signal semaphore S when it finishes
            And we tell operation B to wait for S to be signaled
            
            Note that the waiting only happens at the GPU

            To make the CPU wait we need something called 'fences'

    Fences
        Same thing as semaphore but at the host-side (CPU-side)
        Fences are needed to be reset manually

        The general good practice is not to block the host

    Where to use them?
        Semaphores will be used for swapchain operations since they happen at the GPU
        We use fences to wait for the previous frame to finish, since we don't want
        to use a frame that is being currently in use or draw multimple frames at
        the same time

Command Buffers
    --> https://docs.vulkan.org/spec/latest/chapters/cmdbuffers.html

    What commands does it usually performs:
        - bind pipelines
        - bind descriptor sets to command buffers
        - modify dynamic states
        - draw commands
        - dispatch
        - execute secondary command buffers
        - copy buffer and images 
        - etc...

    States
        Each command buffer manages state independently from others

